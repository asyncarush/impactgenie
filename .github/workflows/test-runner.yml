name: Test Runner Environment

on:
  workflow_dispatch:  # Allows manual triggering
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  test-environment:
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v4

    - name: Install Minikube
      run: |
        curl -LO https://storage.googleapis.com/minikube/releases/latest/minikube-linux-amd64
        sudo install minikube-linux-amd64 /usr/local/bin/minikube
        rm minikube-linux-amd64

    - name: Start Minikube
      run: |
        minikube start --driver=docker
        minikube status

    - name: Configure kubectl
      run: |
        curl -LO "https://dl.k8s.io/release/$(curl -L -s https://dl.k8s.io/release/stable.txt)/bin/linux/amd64/kubectl"
        chmod +x kubectl
        sudo mv kubectl /usr/local/bin/
        
        echo "Checking cluster info:"
        kubectl cluster-info
        
        echo "Current nodes:"
        kubectl get nodes
        
        echo "Current namespaces:"
        kubectl get ns
        
        echo "Pods in default namespace:"
        kubectl get pods

    - name: Copy Local Resources (if needed)
      run: |
        # Copy any local resources you need to deploy
        kubectl create namespace your-namespace || true
        
        # Example: Deploy a test pod
        kubectl run test-pod --image=nginx -n default
        
        echo "Waiting for pod to be ready..."
        kubectl wait --for=condition=ready pod/test-pod --timeout=60s
        
        echo "Pod status:"
        kubectl get pod test-pod

    - name: System Information
      run: |
        echo "Operating System Info:"
        lsb_release -a
        echo "-------------------"
        echo "Kernel Version:"
        uname -a
        echo "-------------------"
        echo "CPU Info:"
        lscpu
        echo "-------------------"
        echo "Memory Info:"
        free -h
        echo "-------------------"
        echo "Disk Space:"
        df -h
        echo "-------------------"
        echo "Ubuntu Version:"
        cat /etc/os-release
        echo "-------------------"
        echo "Node Version:"
        node --version
        echo "-------------------"
        echo "NPM Version:"
        npm --version

    - name: Node.js Setup Check
      run: |
        echo "Node.js environment details:"
        node -e "console.log('Node.js Runtime:', process.version)"
        node -e "console.log('Architecture:', process.arch)"
        node -e "console.log('Platform:', process.platform)"
        node -e "console.log('OS Release:', require('os').release())"
        node -e "console.log('CPU Cores:', require('os').cpus().length)"
        node -e "console.log('Total Memory:', require('os').totalmem() / 1024 / 1024 / 1024, 'GB')"
        node -e "console.log('Free Memory:', require('os').freemem() / 1024 / 1024 / 1024, 'GB')"
